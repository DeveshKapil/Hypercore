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


find /lib /usr/lib -name libpthread.so.0

LD_LIBRARY_PATH=/lib/x86_64-linux-gnu qemu-system-x86_64 -enable-kvm -cpu host -m 512 -serial mon:stdio -kernel hypervisor


qemu-system-x86_64 -enable-kvm -cpu host -m 512 -serial mon:stdio -kernel hypervisor


gui

cpu scheduling algo

memory scheduling algo

file manamgement system

io manamgement system

network manamgement


Create a gui using electron js to doe the following tasks
on a vm created using qemu
create a vm
clone a vm
delete a vm
snapshot a vm
update a vm
store vm configs
restore vm


remote-viewer spice+unix:///home/dev/.hypercore/vms/<vm-name>/spice.sock


installed_state.json           
{"isInstalled": true, "lastModified": "2025-05-26T22:26:14+05:30"}


mount.sh

#!/bin/bash
# Mount shared storage for Hypercore VM
# This script requires root privileges

# Function to detect the Linux distribution
detect_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo "$ID"
    elif [ -f /etc/redhat-release ]; then
        echo "rhel"
    elif [ -f /etc/debian_version ]; then
        echo "debian"
    else
        echo "unknown"
    fi
}

# Function to install QEMU guest agent
install_qemu_guest_agent() {
    local distro=$(detect_distro)
    echo "Detected distribution: $distro"
    
    case "$distro" in
        "ubuntu"|"debian")
            apt-get update
            apt-get install -y qemu-guest-agent
            systemctl enable qemu-guest-agent
            systemctl start qemu-guest-agent
            ;;
        "fedora"|"rhel"|"centos")
            dnf install -y qemu-guest-agent
            systemctl enable qemu-guest-agent
            systemctl start qemu-guest-agent
            ;;
        "arch"|"manjaro")
            pacman -Sy --noconfirm qemu-guest-agent
            systemctl enable qemu-guest-agent
            systemctl start qemu-guest-agent
            ;;
        "opensuse"*)
            zypper install -y qemu-guest-agent
            systemctl enable qemu-guest-agent
            systemctl start qemu-guest-agent
            ;;
        *)
            echo "Unsupported distribution for automatic installation"
            echo "Please install QEMU guest agent manually"
            ;;
    esac
}

# Check and install QEMU guest agent if not present
if ! systemctl is-active --quiet qemu-guest-agent; then
    echo "QEMU guest agent not running. Installing..."
    install_qemu_guest_agent
else
    echo "QEMU guest agent is already running"
fi

# Create mount point if it doesn't exist
mkdir -p /shared

# Get the device name for shared storage
DEVICE=$(lsblk -o NAME,SERIAL | grep shared_disk | cut -d' ' -f1)
if [ -z "$DEVICE" ]; then
    echo "Shared storage device not found"
    exit 1
fi

# Mount the device
mount /dev/$DEVICE /shared
if [ $? -eq 0 ]; then
    echo "Shared storage mounted successfully at /shared"
    # Set appropriate permissions
    chmod 777 /shared
else
    echo "Failed to mount shared storage"
    exit 1
fi


unmount.sh
#!/bin/bash
# Unmount shared storage for Hypercore VM
# This script requires root privileges

# Check if the mount point exists and is mounted
if mountpoint -q /shared; then
    # Unmount the shared storage
    umount /shared
    if [ $? -eq 0 ]; then
        echo "Shared storage unmounted successfully"
    else
        echo "Failed to unmount shared storage"
        exit 1
    fi
else
    echo "Shared storage is not mounted"
    exit 0
fi

